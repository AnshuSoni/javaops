<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>JavaOps</title><link>https://anshusoni.github.io/javaops/</link><description>Recent content on JavaOps</description><generator>Hugo -- 0.145.0</generator><language>en-us</language><lastBuildDate>Mon, 16 Jun 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://anshusoni.github.io/javaops/index.xml" rel="self" type="application/rss+xml"/><item><title>Powering Up Java Collections with Apache Commons Collections</title><link>https://anshusoni.github.io/javaops/apache-commons/commons_collections_tutorial/</link><pubDate>Mon, 16 Jun 2025 00:00:00 +0000</pubDate><guid>https://anshusoni.github.io/javaops/apache-commons/commons_collections_tutorial/</guid><description>Handling common Null Pointers Exceptions in Strings, using Apache Commons StringUtils</description></item><item><title>Keeping Your System Clean: Best Practices for Updates and Removing Orphan Packages in Debian</title><link>https://anshusoni.github.io/javaops/posts/keeping-system-clean-debian/</link><pubDate>Fri, 13 Jun 2025 00:00:00 +0000</pubDate><guid>https://anshusoni.github.io/javaops/posts/keeping-system-clean-debian/</guid><description>&lt;p>Keeping your Debian-based system clean and up-to-date is essential for security, stability, and performance. Over time, unnecessary or orphaned packages can accumulate, and outdated software may expose your system to vulnerabilities. This blog post covers essential practices to keep your system tidy and efficient.&lt;/p>
&lt;h2 id="-regular-system-updates">🛠️ Regular System Updates&lt;/h2>
&lt;p>Keeping your system updated ensures that security patches, bug fixes, and performance improvements are applied.&lt;/p>
&lt;h3 id="update-package-lists">Update Package Lists&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt update
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="upgrade-installed-packages">Upgrade Installed Packages&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt upgrade
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="full-upgrade-handles-dependencies-and-removals">Full Upgrade (Handles Dependencies and Removals)&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt full-upgrade
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Schedule regular updates, or use a tool like &lt;code>cron&lt;/code> or &lt;code>unattended-upgrades&lt;/code> for automation.&lt;/p></description></item><item><title>Monitoring Directory Changes with Apache Commons VFS</title><link>https://anshusoni.github.io/javaops/apache-commons/apache-commons-observing-directory-changes/</link><pubDate>Sat, 10 May 2025 10:38:00 +0530</pubDate><guid>https://anshusoni.github.io/javaops/apache-commons/apache-commons-observing-directory-changes/</guid><description>&lt;h2 id="keeping-an-eye-on-your-files-directory-change-monitoring-with-apache-commons-vfs">Keeping an Eye on Your Files: Directory Change Monitoring with Apache Commons VFS&lt;/h2>
&lt;p>I always wonder, how I can track the files changes, within a directory when I was learning java in my college. When I came to work, this horror story comes true, when I was officially a part of team, which analyses, lots of file processing, contents changed within the directory, and it is closely integrated with the Spring boot microservices. Initially I tried this solution to be fixed via Observer Pattern, but recently I tried Apache Commons VFS. Since, I am writing these days on Apache Commons, and the essential java utils, I found it worth sharing my internal notes to my readers.&lt;/p></description></item><item><title>Streamlining String Operations: Best Practices Using StringUtils in Java</title><link>https://anshusoni.github.io/javaops/apache-commons/apache-commons-string-utils/</link><pubDate>Fri, 02 May 2025 00:00:00 +0000</pubDate><guid>https://anshusoni.github.io/javaops/apache-commons/apache-commons-string-utils/</guid><description>Handling common Null Pointers Exceptions in Strings, using Apache Commons StringUtils</description></item><item><title>Why Is My Cron Job Not Running? Debugging Silent Failures</title><link>https://anshusoni.github.io/javaops/posts/why-is-my-cron-job-not-running/</link><pubDate>Fri, 02 May 2025 00:00:00 +0000</pubDate><guid>https://anshusoni.github.io/javaops/posts/why-is-my-cron-job-not-running/</guid><description>A practical guide to diagnosing and fixing silent cron job failures on Linux.</description></item><item><title>Fixing Disk I/O Bottlenecks and Latency on Linux</title><link>https://anshusoni.github.io/javaops/posts/fixing-disk-io-bottlenecks-linux/</link><pubDate>Thu, 01 May 2025 00:00:00 +0000</pubDate><guid>https://anshusoni.github.io/javaops/posts/fixing-disk-io-bottlenecks-linux/</guid><description>Learn how to identify and resolve disk I/O bottlenecks on Linux systems using practical tools and real-world troubleshooting techniques.</description></item><item><title>Troubleshooting SSH Timeouts, Slow Login, and Authentication Failures</title><link>https://anshusoni.github.io/javaops/posts/troubleshooting-ssh-slow-login-timeouts/</link><pubDate>Thu, 01 May 2025 00:00:00 +0000</pubDate><guid>https://anshusoni.github.io/javaops/posts/troubleshooting-ssh-slow-login-timeouts/</guid><description>A practical guide to diagnosing and fixing common SSH connection issues on Linux servers, including timeouts, slow logins, and authentication errors.</description></item><item><title>Diagnosing High Load: A Step-by-Step Troubleshooting Guide</title><link>https://anshusoni.github.io/javaops/posts/diagnosing-high-load/</link><pubDate>Tue, 29 Apr 2025 19:47:45 +0000</pubDate><guid>https://anshusoni.github.io/javaops/posts/diagnosing-high-load/</guid><description>Learn how to identify and fix high system load issues on a Linux server with this practical, step-by-step guide.</description></item><item><title>Cool Vim Tips and Tricks for Developers</title><link>https://anshusoni.github.io/javaops/posts/vim-tips/</link><pubDate>Mon, 28 Apr 2025 12:00:00 +0000</pubDate><guid>https://anshusoni.github.io/javaops/posts/vim-tips/</guid><description>Boost your productivity with these essential Vim tips, tricks, and shortcuts.</description></item><item><title>Understanding Multipath and Creating LVM over Multipath Devices</title><link>https://anshusoni.github.io/javaops/posts/multipath-setup/</link><pubDate>Mon, 28 Apr 2025 11:00:00 +0000</pubDate><guid>https://anshusoni.github.io/javaops/posts/multipath-setup/</guid><description>Learn the basics of multipathing in Linux, and how to create a Logical Volume Manager (LVM) setup over multipath devices for performance and redundancy.</description></item><item><title>How DNS Works Internally: Primary/Secondary Servers, Delegation, Poisoning, and Common Attacks</title><link>https://anshusoni.github.io/javaops/posts/dns-internal-working/</link><pubDate>Mon, 28 Apr 2025 10:30:00 +0000</pubDate><guid>https://anshusoni.github.io/javaops/posts/dns-internal-working/</guid><description>Explore the internal workings of DNS, the roles of primary and secondary servers, DNS delegation, poisoning, common DNS attacks, and utilities to debug DNS issues.</description></item><item><title>Quick Intro to iostat, vmstat, and netstat for Performance Checks</title><link>https://anshusoni.github.io/javaops/posts/vmstat-iostat-ss/</link><pubDate>Mon, 28 Apr 2025 10:00:00 +0000</pubDate><guid>https://anshusoni.github.io/javaops/posts/vmstat-iostat-ss/</guid><description>Learn how to quickly use iostat, vmstat, and netstat to perform basic system performance checks.</description></item><item><title>What Happens When You Type a Command in Bash?</title><link>https://anshusoni.github.io/javaops/posts/what-happens-when-you-type-a-command-in-bash/</link><pubDate>Tue, 22 Apr 2025 00:00:00 +0000</pubDate><guid>https://anshusoni.github.io/javaops/posts/what-happens-when-you-type-a-command-in-bash/</guid><description>Explore the inner workings of Bash and understand the journey a command takes from your keyboard to execution.</description></item><item><title>Init Systems in Containers: Why systemd Isn’t Always There</title><link>https://anshusoni.github.io/javaops/posts/init-systems-in-containers/</link><pubDate>Fri, 18 Apr 2025 00:00:00 +0000</pubDate><guid>https://anshusoni.github.io/javaops/posts/init-systems-in-containers/</guid><description>Why most Docker containers don’t run systemd and what that means for process management inside containers.</description></item><item><title>Using tmux to Manage Persistent SSH Sessions: Which One Is Better — screen or tmux?</title><link>https://anshusoni.github.io/javaops/posts/tmux-vs-screen/</link><pubDate>Fri, 18 Apr 2025 00:00:00 +0000</pubDate><guid>https://anshusoni.github.io/javaops/posts/tmux-vs-screen/</guid><description>Explore the advantages of using tmux over screen for managing persistent SSH sessions, and learn how to use tmux effectively.</description></item><item><title>.bashrc vs .bash_profile vs .profile — Explained for Developers</title><link>https://anshusoni.github.io/javaops/posts/bashrc-vs-bash_profile-vs-profile/</link><pubDate>Tue, 15 Apr 2025 00:00:00 +0000</pubDate><guid>https://anshusoni.github.io/javaops/posts/bashrc-vs-bash_profile-vs-profile/</guid><description>Confused about when to use .bashrc, .bash_profile, or .profile? This guide breaks down the difference with examples, so you can finally get your shell configuration right.</description></item><item><title>10 Bash Scripting Tips for Everyday DevOps</title><link>https://anshusoni.github.io/javaops/posts/bash-tips/</link><pubDate>Sun, 13 Apr 2025 00:00:00 +0000</pubDate><guid>https://anshusoni.github.io/javaops/posts/bash-tips/</guid><description>&lt;p>Bash scripting is a powerful skill for any developer or DevOps engineer. Whether you&amp;rsquo;re automating deployments, setting up environments, or writing health checks, here are &lt;strong>10 useful Bash tips and tricks&lt;/strong> to level up your scripting game.&lt;/p>
&lt;hr>
&lt;h2 id="1-set--e-and--u-for-safer-scripts">1️⃣ Set &lt;code>-e&lt;/code> and &lt;code>-u&lt;/code> for Safer Scripts&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>set -eu
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>-e: Exit on error&lt;/li>
&lt;li>-u: Treat unset variables as errors&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>Use this at the top of your scripts for better safety.&lt;/p></description></item></channel></rss>